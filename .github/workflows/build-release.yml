name: 🚀 Build & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build application
      run: npm run dist
      
    - name: 📦 Package Windows executable
      run: npm run package:win
      
    - name: 📤 Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: hayati-windows-portable
        path: dist-packaged/
        retention-days: 30

  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build web application
      run: npm run build
      
    - name: 📤 Upload web artifact
      uses: actions/upload-artifact@v4
      with:
        name: hayati-web-build
        path: dist/
        retention-days: 30

  release:
    needs: [build-windows, build-web]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: hayati-windows-portable
        path: ./artifacts/windows/
        
    - name: 📦 Download web artifact
      uses: actions/download-artifact@v4
      with:
        name: hayati-web-build
        path: ./artifacts/web/
        
    - name: 🗜️ Create release archives
      run: |
        cd artifacts/windows && zip -r ../../Hayati-Windows-Portable.zip . && cd ../..
        cd artifacts/web && zip -r ../../Hayati-Web-App.zip . && cd ../..
        
    - name: 📝 Extract release notes
      id: extract_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract release notes from CHANGELOG if exists
        if [ -f "CHANGELOG.md" ]; then
          sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
        else
          echo "Release $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "🚀 New release of Hayati (حياتي) - Islamic Life Management App" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Download Options:**" >> release_notes.md
          echo "- 💻 **Windows Portable**: Download \`Hayati-Windows-Portable.zip\` (no installation required)" >> release_notes.md
          echo "- 🌐 **Web App**: Download \`Hayati-Web-App.zip\` (serve locally or deploy)" >> release_notes.md
          echo "" >> release_notes.md
          echo "جزاكم الله خيراً for using Hayati! 🤲" >> release_notes.md
        fi
        
    - name: 🎉 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Hayati v${{ steps.extract_notes.outputs.version }}
        body_path: release_notes.md
        files: |
          Hayati-Windows-Portable.zip
          Hayati-Web-App.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
